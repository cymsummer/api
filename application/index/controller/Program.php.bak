<?php
/**
 * Created by PhpStorm.
 * User: rwcym
 * Date: 2018/7/14
 * Time: 10:10
 */

namespace app\index\controller;

use app\index\model\Info;
use app\index\model\User;
use think\Controller;
use think\Db;
use think\Image;
use think\cache\driver\Redis;

class Program extends Controller
{
    //数据展示
    public function index()
    {
        $page = $this->request->request("page") ? $this->request->request("page") : "1";//分页
        $act = $this->request->request("act") ? $this->request->request("act") : "hot";//最热
        $type = $this->request->request("type") ? $this->request->request("type") : "xcx";//小程序
        $cate = $this->request->request("category") ? $this->request->request("category") : "";//小程序类别
        if ($cate) {
            $cate_where = "and program_category_id=$cate";
        } else {
            $cate_where = "";
        }
        if ($type == "xcx") {
            $where = "1";
        } else {
            $where = "2";
        }
        $category = Db::table("small_program_category")->where("category_type", $where)->field('id,category_name')->select();
        if ($act == "hot") {
            //获取文章id
            $arr = Db::table("small_program")->where("program_style=$where $cate_where")->field("id,program_title,program_icon")->order("program_see_num desc,release_time desc")->page($page, 24)->select();
            $count = Db::table("small_program")->where("program_style=$where $cate_where")->order("program_see_num desc,release_time desc")->count();
            $pagecount = ceil($count / 24);
        } elseif ($act == "new") {
            $arr = Db::table("small_program")->where("program_style=$where $cate_where")->order("release_time desc")->page($page, 24)->select();
            $count = Db::table("small_program")->where("program_style=$where $cate_where")->count();
            $pagecount = ceil($count / 24);
        }
        $img_url = config("img_config");
        foreach ($arr as $k => $v) {
            $arr[$k]["program_icon"] = $img_url["src"].$v["program_icon"];
        }
        $result["msg"] = "成功！";
        $result["code"] = "1";
        $result["data"]["category"] = $category;
        $result["data"]["$act"] = $arr;
        return $result;
    }

    //数据详情
    public function detail()
    {
        $redis = new Redis();
        $id = $this->request->request("id");//小程序id
        $page = $this->request->request("page") ? $this->request->request("page") : "1";//页码
        $act = $this->request->request("act");//类型
        $num = $this->request->request("score"); //分数
        $source = $this->request->request("source"); //来源
        $ip = $this->request->request("ip"); //ip
        $openid = $this->request->request("user_program_id");
        $result["data"]["user_info"] = User::getuser($openid);
        if (empty($id)) {
            $result["msg"] = "缺少id";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }

        //浏览量加1
        Db::table('small_program')->where('id', $id)->setInc('program_see_num');
       
        //数据详情
        $arr = $redis->hMGet("wz_detail:" . $id, $redis->get("wz_detail_key"));
        if (empty($arr["id"])) {
            $arr = Info::index($id);
        }
        //评论内容
        $comment = Db::table('small_program_comment')->where("comment_id=:comment_id and comment_state!=:comment_state")->bind(['comment_id' => $arr["program_comment_id"], 'comment_state' => '1'])->order("publish_time desc")->page($page, 20)->select();
        foreach ($comment as $k => $v) {
            $comment[$k]["userinfo"][] = Db::table('small_program_user')->where("user_program_id", $v["comment_user_id"])->find();
        }
        //评分添加
        if (!empty($act) && $act == "add") {
            $data = array();
            $data["score_num"] = $num;
            $data["score_id"] = $id;
            $data["score_source"] = $source;
            $data["score_ip"] = $ip;
            Db::table("small_program_score")->insert($data);
        }
        $score["count"] = (string)Db::table("small_program_score")->where("score_id=$id")->count();
        $score["avg"] = (string)Db::table("small_program_score")->where("score_id=$id")->avg("score_num");
        $score["avg"] = sprintf("%.1f", $score["avg"]);
        //相关推荐
        if (empty($arr["program_title"])) {
            $result["msg"] = "缺少小程序标题";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }
        $about1 = Db::table("small_program_label")->where("label_name", "like", "%" . $arr["program_title"] . "%")->select();
        if ($about1) {
            foreach ($about1 as $v) {
                $about_arr[] = Info::index($v["id"]);
            }
        } else {
            $about2 = Db::table("small_program")->where("program_title", "like", "%" . $arr["program_title"])->select();
            if ($about2 && ($about2[0]["id"] != $arr["id"])) {
                foreach ($about2 as $v) {
                    $about_arr[] = Info::index($v["id"]);
                }
            } else {
                $about_arr = $this->getRandTable($arr["program_category_id"]);
            }
        }
        $result["msg"] = "成功！";
        $result["code"] = "1";
        $result["data"] = $arr;
        $result["data"]["comment"] = $comment;
        $result["data"]["score"] = $score;
        $result["data"]["about"] = $about_arr;

        return $result;
    }
    /*
     * 随机获取数据
     * */
    public function getRandTable($cate_id)
    {
        $num = 7;    //需要抽取的默认条数
        $table = 'program';    //需要抽取的数据表
        $countcus = Db::name($table)->where("program_category_id", $cate_id)->count();    //获取总记录数
        $min = Db::name($table)->min('id');    //统计某个字段最小数据
        if ($countcus < $num) {
            $num = $countcus;
        }
        $i = 1;
        $flag = 0;
        $ary = array();
        while ($i <= $num) {
            $rundnum = rand($min, $countcus);//抽取随机数
            if ($flag != $rundnum) {
                //过滤重复
                if (!in_array($rundnum, $ary)) {
                    $ary[] = $rundnum;
                    $flag = $rundnum;
                } else {
                    $i--;
                }
                $i++;
            }
        }
        for ($i=0;$i<count($ary);$i++){
            $list[]=Info::index($ary[$i]);
        }
        return $list;
    }

    //发布
    public function insert()
    {
        $user_id = $this->request->request("openid");
        if (empty($user_id)) {
            $result["msg"] = "请登录";
            $result["code"] = "-1";
            return $result;
        }
        $data = $this->request->post("data/a");
        if (empty($data)) {
            $result["msg"] = "传送数据有误！";
            $result["code"] = "-1";
            return $result;
        }
        $newdata = array();
        foreach ($data as $v) {
            $newdata = $v;
        }
        //连接本地的 Redis 服务
        $redis = new Redis();
        $redis->inc("program_score_id");//自增的评分总id
        $redis->inc("program_comment_id");//自增的评论总id
        $redis->inc("program_fabulous_id");//自增的点赞总id
        $redis->inc("program_tab_id");//自增的标签总id
        $arr = json_decode($newdata, true);

        $info = Db::table("small_program")->where("program_title", $arr['program_title'])->select();
        if ($info) {
            $result["msg"] = "小程序已存在，请直接搜索查看";
            $result["code"] = "1";
            return $result;
        }
        $arr["program_score_id"] = $redis->get("program_score_id"); //自增的评分总id
        $arr["program_comment_id"] = $redis->get("program_comment_id");//自增的评论总id
        $arr["program_fabulous_id"] = $redis->get("program_fabulous_id");//自增的点赞总id
        $arr["create_time"] = time();//创建时间
        $arr["release_time"] = time();//发布时间
        $arr["program_pic"] = trim($arr["program_pic"]);//图片上传
        //标签添加
        $label = array();
        $label["label_name"] = $arr["program_tab_name"];//标签内容
        $label["label_id"] = $redis->get("program_tab_id");//自增的标签总id
        $label["label_time"] = time();//标签添加时间
        $label_id = Db::table("small_program_label")->insertGetId($label);
        if ($label_id) {
            unset($arr["program_tab_name"]);
            $arr["program_tab_id"] = $label["label_id"];
            $id = Db::table("small_program")->insertGetId($arr);
            if ($id) {
                $result["msg"] = "成功";
                $result["code"] = "1";
                return $result;
            } else {
                $result["msg"] = "失败";
                $result["code"] = "-1";
                return $result;
            }
        }
    }

    //图片上传
    public function imginsert()
    {
        error_reporting(E_ERROR | E_PARSE);
        $img1 = $_FILES["file1"];
        $img2 = $_FILES["file2"];
        $img3 = $_FILES["file3"];
        $img4 = $_FILES["file4"];
        $img5 = $_FILES["file5"];
        if (!empty($img1["tmp_name"])) {
            $image_info[] = $img1;
        }
        if (!empty($img2["tmp_name"])) {
            $image_info[] = $img2;
        }
        if (!empty($img3["tmp_name"])) {
            $image_info[] = $img3;
        }
        if (!empty($img4["tmp_name"])) {
            $image_info[] = $img4;
        }
        if (!empty($img5["tmp_name"])) {
            $image_info[] = $img5;
        }
        if (!isset($image_info)) {
            $result["msg"] = "失败";
            $result["code"] = "-1";
            $result["data"] = array();
            return $result;
        }
        $img_count = count($image_info);
        $img = "";
        $config=config("img_config");
      //  print_r($config);die;
        if (!empty($image_info)) {
            foreach ($image_info as $v) {
                $image = Image::open($v["tmp_name"]);
                // 返回图片的类型
                $type = $image->type();
                //添加水印
                //     $image->water('../public/luobo/images/logo.png', Image::WATER_SOUTHWEST, 100)->save('../public/upload/' . $new_img_name);
                $new_img_name = $this->random(18) . "." . $type;
                $image->save($config["__ROOT__"] . $new_img_name);
                $data["image_url"] =  $config["src"]."/". $new_img_name;
                Db::connect("db_config1")->table("luobo_image")->insert($data);
                if ($img_count == 1) {
                    $img .= $data["image_url"];
                } else {
                    $img .= $data["image_url"] . ",";
                }
            }
        }
        $result["msg"] = "成功";
        $result["code"] = "1";
        $result["data"] = $img;
        return $result;
    }

    public function random($length)
    {
        $hash = '';
        $chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789abcdefghijklmnopqrstuvwxyz';
        $max = strlen($chars) - 1;
        PHP_VERSION < '4.2.0' && mt_srand((double)microtime() * 1000000);
        for ($i = 0; $i < $length; $i++) {
            $hash .= $chars[mt_rand(0, $max)];
        }
        return $hash;
    }

    //评论功能
    public function comment()
    {
        header('Access-Control-Allow-Origin:*');
        $openid = $this->request->request("openid");//openid
        if (empty($openid)) {
            $result["msg"] = "请登录";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }
        $id = $this->request->request("id");//评论总id
        if (empty($id)) {
            $result["msg"] = "缺少评论id";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }
        $data = array();
        $data["comment_user_id"] = $openid;//用户id
        $data["comment_content"] = $this->request->request("content");//评论内容
        $data["comment_id"] = $id;//评论总id
        $data["comment_source"] = $this->request->request("source");//评论来源
        $data["publish_time"] = time();//评论时间
        $comment_id = Db::table('small_program_comment')->insertGetId($data);
        if ($comment_id) {
            $result["msg"] = "成功";
        } else {
            $result["msg"] = "失败";
        };
        $result["code"] = "1";
        $result["data"] = "";
        return $result;
    }

    //个人中心
    //        $redis=new Redis();
//        $redis->rm("openid_oL5ey0h7xj7BcRgR02gkGkZcdIwI");
    public function user()
    {
        $user_id = $this->request->request("openid");
        if (empty($user_id)) {
            $result["msg"] = "缺少user_id";
            $result["code"] = "-1";
            return $result;
        }
        $user_info["user_info"] = User::getuser($user_id);
        $user_info["xcx"] = Db::table("small_program")->where("program_user_id", $user_info["user_info"]["user_program_id"])->select();
        $result["msg"] = "成功";
        $result["code"] = "1";
        $result["data"] = $user_info;
        return $result;
    }

    //搜索展示
    public function search()
    {
        $title = $this->request->request("title");
        $openid = $this->request->request("openid");
        $result["data"]["user_info"] = User::getuser($openid);
        $arr["recommend"][] = Db::connect("db_config1")->table("luobo_content")->where("luobo_title", "like", "%" . $title . "%")->order("luobo_see_num desc")->find();
        $info = Db::table("small_program_label")->where("label_name", "like", "%" . $title . "%")->select();
       if (empty($info)) {
            $detail = Db::table("small_program")->where("program_title", "like", "%" . $title . "%")->order("program_see_num desc")->select();
            foreach ($detail as$k=> $v){
                $arr["xcx"][$k]=Info::index($v["id"]);
            }
        }else{
            foreach ($info as $k => $v) {
                $new_info = Db::table("small_program")->where("program_tab_id", $v["label_id"])->find();
                $arr["xcx"][$k] = $new_info;
            }
        }
        $result["msg"] = "成功";
        $result["code"] = "1";
        $result["data"] = $arr;
        return $result;
    }
    /*
     * 申请认领
     * */
    public function claim()
    {
        $appid = $this->request->post("appid");
        $openid = $this->request->post("openid");
        $appsecret = $this->request->post("appsecret");
        if(empty($openid) || empty($appsecret) || empty($appid)){
            $result["msg"] = "确实参数";
            $result["code"] = "-1";
            return $result;
        }
        $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=" . $appid . "&secret=" . $appsecret;
        $access_token = $this->curl($url);
        $access_token_arr = json_decode($access_token, true);
        $data["new_appid"] = "";
        $data["appsecret"] = "";
        if ($access_token_arr["access_token"]) {
            $user_info = User::getuser($openid);
            $data["new_appid"] .= $appid . "," . $user_info["appid"];
            $data["appsecret"] .= $appsecret . "," . $user_info["appsecret"];
            if (Db::table("small_program_user")->where("user_program_id=$openid")->update($data)) {
                $result["msg"] = "认领成功";
                $result["code"] = "1";
                return $result;
            };

        }
    }

    //============暂不需要===========
    //分类展示
    public function show()
    {
        $id = $this->request->get("id");
        $arr = Db::table('small_program')->where('program_category_id', $id)->select();
        $result["msg"] = "成功！";
        $result["code"] = "1";
        $result["data"] = $arr;
        return $result;
    }

    //相关推荐
    public function about()
    {
        //小程序标题
        $program_title = $this->request->get("program_title");
        if (empty($program_title)) {
            $result["msg"] = "缺少小程序标题";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }
        $arr = Db::table("small_program_label")->where("label_name", "like", "%" . $program_title . "%")->select();
        if ($arr) {
            foreach ($arr as $v) {
                $new_arr[] = Db::table("small_program")->find($v["id"]);
            }
        } else {
            $new_arr = array();
        }
        $result["msg"] = "成功！";
        $result["code"] = "1";
        $result["data"] = $new_arr;
        return $result;

    }

    //评分展示
    public function score()
    {
        //评分id
        $id = $this->request->get("id");
        if (empty($id)) {
            $result["msg"] = "缺少id";
            $result["code"] = "-1";
            $result["data"] = "";
            return $result;
        }
        //类型
        $act = $this->request->get("act");
        //分数
        $score = $this->request->get("score");
        //来源
        $source = $this->request->get("source");
        //ip
        $ip = $this->request->get("ip");
        if (!empty($act) && $act == "add") {
            $data = array();
            $data["score_num"] = $score;
            $data["score_id"] = $id;
            $data["score_source"] = $source;
            $data["score_ip"] = $ip;
            Db::table("small_program_score")->insert($data);
        }

        $arr["count"] = (string)Db::table("small_program_score")->where("source_id=$id")->count();
        $arr["avg"] = (string)Db::table("small_program_score")->where("source_id=$id")->avg("score_num");
        $arr["avg"] = sprintf("%.1f", $arr["avg"]);
        $result["msg"] = "成功！";
        $result["code"] = "1";
        $result["data"] = $arr;
        return $result;
    }
}